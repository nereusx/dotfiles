# busybox ash

case $i in
*i*) opt_interactive=1;;
*l*) opt_login=1;;
esac

[ -z $opt_interactive ] || return

opt_color=1

set -o allexport
#set -o emacs

umask 022

[[ $TERM == "rxvt" ]] && TERM="rxvt-unicode"
USER=${USER:-$(id -un)}
HOME=${HOME:-"/home/$USER"}
USER_ID=${USER_ID:-$(id -u)}
HOSTNAME=${HOSTNAME:-$(hostname)}
TTY=${TTY:-$(tty | cut -f3-4 -d/)}
MAIL=${MAIL:-"/var/mail/$USER"}
MAILCHECK=${MAILCHECK:-600}
if [[ -z "$DISTRO" ]]; then
	[[ -r /etc/os-release ]] && DISTRO=$(cat /etc/os-release | awk '/^ID=/{print tolower(substr($0,4))}' | xargs echo)
fi
DISTRO=${DISTRO:-$(uname -s)}
OSTYPE=${OSTYPE:-$(uname -s)}

# setup several local directories
backup=${HOME}/.backup
list="$backup $backup/text $backup/saves $HOME/.bin $HOME/.help $HOME/.misc"
for e in $list; do
	if [ ! -d $e ]; then
		mkdir -p $e
		chmod 0700 $e
	fi
done

PATH=${HOME}/.bin:${HOME}/.help:$PATH
[ -x "/bin/path++" ] && PATH=$(/bin/path++)

# PROMPT
if [ $opt_color -eq 1 ]; then
	PS1='\033[1m'
	[ $USER_ID -eq 0 ] && PS1=$PS1'\033[31m\u' || PS1=$PS1'\033[36m\u'
	PS1=$PS1'\033[32m@\h\033[0m \w \$ '
else
	PS1='\u@\h \w \$ '
fi

# --- EDITORS ---
GRPATH=${HOME}/.grief-local:/usr/share/grief/macros:/usr/local/share/grief/macros
GRFLAGS="-m grief-rc"
GRUTF8_FORCE=1
JED_HOME=$HOME/.jed
alias jed-prep='xjed -batch -n -l preparse'
# customise your favourite editor here; the first one found is used
list="jed gr joe nano emacs vi"
for EDITOR in $list; do
	EDITOR=$(command -pv "$EDITOR") && break
done
VISUAL="$EDITOR"
alias b="$EDITOR"
for HEXEDITOR in hte mcedit dhex; do
	HEXEDITOR=$(command -pv "$HEXEDITOR") && break
done
alias hexedit="$HEXEDITOR"

# --- PAGER ---
LESS='-R'
GROFF_ENCODING='utf8'
LESS_TERMCAP_mb='[1;31m'		# begin bold,			ANSI: [1m
LESS_TERMCAP_md='[1;36m'		# begin blink,			ANSI: [5m
LESS_TERMCAP_me='[0m'     	# reset bold/blink,		ANSI: [21m[25m
LESS_TERMCAP_so='[7m'			# begin reverse video,	ANSI: [7m
LESS_TERMCAP_se='[27m'		# reset reverse video,	ANSI: [27m
LESS_TERMCAP_us='[1;32m'		# begin underline,		ANSI: [4m
LESS_TERMCAP_ue='[0m'			# reset underline,		ANSI: [24m
LESS_TERMCAP_mr=$(tput rev)
LESS_TERMCAP_mh=$(tput dim)
LESS_TERMCAP_ZN=$(tput ssubm)
LESS_TERMCAP_ZV=$(tput rsubm)
LESS_TERMCAP_ZO=$(tput ssupm)
LESS_TERMCAP_ZW=$(tput rsupm)
#LESSOPEN="|/usr/bin/source-highlight-esc.sh %s"
MOST_SWITCHES='-w'
MOST_EDITOR='jed %s -g %d'
PAGER=less
#PAGER=most
# --- end ---

# other settings
LS_OPTIONS="--color=auto"
BROWSER=firefox
cpus=$(cat /proc/cpuinfo | grep processor | tail -1 | sed 's/processor.*://g')
cpus=$(($cpus + 1))
MAKEFLAGS="-j$cpus"
__GL_YIELD='USLEEP'

if [ $opt_color -eq 1 ]; then
	LS_OPTIONS='--color=auto'
	alias ls='ls --color=auto'
	alias grep='grep --color=auto'
	alias egrep='egrep --color=auto'
	alias dmesg='dmesg --color=auto'
fi
alias ll='ls -lha'

alias cls='clear'
alias whereami='echo "`hostname -f` (`hostname -i`):`pwd`"'
list="/var/log/current /var/log/socklog/messages/current /var/log/messages /var/log/syslog /var/log/dmesg.log /var/log/dmesg"
for e in $list; do
	if [ -r $e ]; then
		if [[ -x "$(command -v clog)" ]]; then
			alias log30="tail -n 30 $e | clog"
		else
			alias log30="tail -n 30 $e"
		fi
		break
	fi
done
if [ -f /var/log/apache2/error.log ]; then
	alias phplog='tail /var/log/apache2/error.log'
elif [ -f /var/log/httpd/error.log ]; then
	alias phplog='tail /var/log/httpd/error.log'
fi
alias netlog='netstat -lptu4'
alias xmerge='xrdb -merge ~/.Xresources'
alias xmonitor-off='xset dpms force off'
alias cdwrite='xorrecord -v speed=16 dev=/dev/sr0 -eject blank=as_needed'
function _bc {
	echo "$*" | bc -l
}
if [ ! -x "$(command -v calc)" ]; then
	if [ -x "$(command -vp wcalc)" ]; then
		alias calc='wcalc'
	else
		alias calc='_bc'
	fi
fi
alias git-q='git add .; git commit -m "quick and dirty fix"; git push'
function _git_s {
	git add .
	git commit -m "$*"
	git push
}
alias git-s='_git_s'
[ $DISTRO == "void" ] && alias man='man -O width=$(tput cols) '

# load local ashrc files
for e in ~/.ashrc-*; do
	[ -f $e ] && . $e
done

#
#	welcome screen
#
function _welcome {
	echo "Welcome to Unix Shell ($1)"
	echo
	list="neofetch screenfetch diogenis fortunes"
	for f in $list; do
		if [[ -x $(command -vp $f) ]]; then
			$f;
			break
		fi
	done
}
[ -n opt_login ] && _welcome $0

unset e f list cpus
