# -- mode: sh; tab-size: 4; --
# mksh

# non-interactive
umask 022

# if non-interactive shell, exit
[[ -o interactive ]] || exit

#
#	MKSH settings
#
set +o sh
set +o posix
set -o emacs
set -o notify
set -o noclobber
set -o utf8-mode
set -o nounset
set +o errexit

set -o allexport
[[ -r ~/.environ ]] && . ~/.environ
[[ -d ~/.cache   ]] && HISTFILE="${HOME}/.cache/.mksh_history"
set +o allexport

# keyboard
bind '^Q'=abort
bind '^[q'=quote
bind '^[d'=kill-line
bind '^[k'=kill-to-eol
#bind '^K'=kill-to-bol
#bind '^[i'=
bind '^[p'=search-history-up
bind '^[l'=downcase-word
bind '^[m'=set-mark-command
bind '^[[2~'=yank

#
#	PROMPT
#
PROMPT_COMMAND=()
_ps[1]=1;
if [[ $USERID -eq 0 ]]; then
	_ps[2]=31; _ps[4]=31; _ps[5]='#'
else
	_ps[2]=35; _ps[4]=34; _ps[5]='$'
fi
if [[ -n ${REMOTEHOST-} ]]; then
	_ps[3]=35
else
	_ps[3]=32
fi

PS1=$'\1\r\1\e[1;${_ps[2]}m\1$USER\1\e[1;${_ps[3]}m\1@$HOSTNAME \1\e[1;${_ps[4]}m\1$PWD \1\e[0m\1${_ps[5]} '
export PS1

# aliases
[[ -r ~/.aliases ]] && . ~/.aliases
alias sleep="$(command -vp sleep)"
alias reload='. ~/.mkshrc'

_hc_cmd() {
	local x
	case $pick_method in
	fzy)	x="$(fc -lnr | fzy)";;
	pick)	x="$(fc -lnr | pick -S)";;
	esac
	if [[ -n "$x" ]]; then
		if [[ ! "$x" == "hc" ]]; then
			eval "$x"
		fi
	fi
	}
alias hc="_hc_cmd"

_go_back_cmd() {
	local x
	case $pick_method in
	fzy)	x="$(builtin dirs -v | fzy | cut -f1 )";;
	pick)	x="$(builtin dirs -v | pick -S | cut -f1 )";;
	esac
	if [[ -n "$x" ]]; then
		cd +$x
	fi
	}
alias cd--='_go_back_cmd'

_go_cmd() {
	local x
	case $pick_method in
	fzy)	x="$(ls -d1 */ --color=never | fzy)";;
	pick)	x="$(ls -d1 */ --color=never | pick)";;
	esac
	if [[ -n "$x" ]]; then
		cd "$x"
	fi
	}
alias go='_go_cmd'

#	welcome screen
if [[ -o login ]]; then
	[[ $TTY == tty* ]] && /bin/echo -ne '\033='
	echo "Welcome to $KSH_VERSION"
	echo
	list="fortune diogenis neofetch screenfetch"
	for e in $list; do
		if [ $(command -vp $e) ]; then
			$e;
			break
		fi
	done
fi

# load local mkshrc files
for e in ~/.mkshrc-*; do
	if [[ -f $e ]]; then
		. $e
	fi
done

# clean up
unset e list
set -o errexit

