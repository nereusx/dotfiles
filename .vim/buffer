" File: cbuflist.vim
" Author: Nicholas Christopoulos
" Version: 1.0
" Last Modified: 17 Dec 2020
"
" Overview
" --------
" Advanced buffer list popup window using the quickui.
" 
" Replacement of:
" call quickui#tools#list_buffer('e')
"
" Required:
"	vim-quickui
"

" prevent to load again
if exists('g:loaded_cbuflist')
    finish
endif
let g:loaded_cbuflist = v:true
let s:keymaps = '123456789abcdefimnopqrstuvwxyz'

" list buffer ids
func! s:get_buff_ids()
    redir => buflist
    silent! ls
    redir END
    let bids = []
    for curline in split(buflist, '\n')
        if curline =~ '^\s*\d\+'
            let bid = str2nr(matchstr(curline, '^\s*\zs\d\+'))
            let bids += [bid]
        endif
    endfor
    return bids
endfunc

" switch buffer callback
func! cbuflist#buffer_switch(bid)
	let code = g:quickui#listbox#current.tag
	let name = fnamemodify(bufname(a:bid), ':p')
	if code == ''
		exec s:switch . ' '. fnameescape(name)
	elseif code == '1'
		exec 'b '. a:bid
	elseif code == '2'
		exec 'vs'
		exec 'b '. a:bid
	elseif code == '3'
		exec 'split'
		exec 'b '. a:bid
	elseif code == '4'
		exec 'tab split'
		exec 'b '. a:bid
	elseif code == '5'
		exec 'tab drop ' . fnameescape(name)
	elseif code == '6' " write
	elseif code == '7' " chmod
	elseif code == '8' " remove
		exec 'bd! ' . a:bid
	endif
endfunc

" get content
function! cbuflist#buflist(switch)
	let bids = s:get_buff_ids()
	let content = []
	let index = 0
	let current = -1
	let bufnr = bufnr()
	let s:switch = a:switch
	for bid in bids
		let key = (index < len(s:keymaps))? strpart(s:keymaps, index, 1) : ''
		let text = '[' . ((key == '')? ' ' : ('&' . key)) . "]\t"
		let text .= "\t"
		let name = fnamemodify(bufname(bid), ':p')
		let main = fnamemodify(name, ':t')
		let path = fnamemodify(name, ':h')
		let buftype = getbufvar(bid, '&buftype')
		let bufmod = getbufvar(bid, '&modified')
		if main == ''
			continue
		elseif buftype == 'nofile' || buftype == 'quickfix'
			continue
		endif
		let text = text
		if bufmod
			let text = text . "*"
		else
			let text = text . " "
		endif 
		let text = text . main . " " . "(" . bid . ")\t" . path
		let cmd = 'call cbuflist#buffer_switch(' . bid . ')'
		if a:switch != ''
			" let cmd = a:switch . ' ' . fnameescape(name)
		endif
		let content += [[text, cmd]]
		if bid == bufnr()
			let current = index
		endif
		let index += 1
	endfor
	let opts = {'title': 'Switch Buffer', 'index':current, 'close':'button'}
	let opts.border = g:quickui#style#border
	let opts.keymap = {}
	let opts.keymap["\<c-e>"] = 'TAG:1' "open
	let opts.keymap["\<c-]>"] = 'TAG:2' "vs/open
	let opts.keymap["\<c-x>"] = 'TAG:3' "sp/open
	let opts.keymap["\<c-t>"] = 'TAG:4' "tabsp
	let opts.keymap["\<c-g>"] = 'TAG:5' "tabdrop
	let opts.keymap["\<A-w>"] = 'TAG:6' "write
	let opts.keymap["\<A-m>"] = 'TAG:7' "change attrs
	let opts.keymap["\<A-d>"] = 'TAG:8' "remove buf
	let opts.keymap["e"] = 'TAG:1'
	let opts.keymap["v"] = 'TAG:2'
	let opts.keymap["s"] = 'TAG:3'
	let opts.keymap["a"] = 'TAG:7'
	let opts.keymap["w"] = 'TAG:6'
	let opts.keymap["d"] = 'TAG:8' 
	let opts.keymap["q"] = 'TAG:9' " quit
	if exists('g:quickui_tools_width')
		let opts.w = get(g:, 'quickui_tools_width', 70)
	endif
	" let opts.syntax = 'cpp'
	let maxheight = (&lines) * 80 / 100
	if len(content) > maxheight
		let opts.h = maxheight
	endif
	if len(content) == 0
		redraw
		echohl ErrorMsg
		echo "*** the buffer list is empty ***"
		echohl None
		return -1
	endif
	call quickui#listbox#open(content, opts)
endfunc

