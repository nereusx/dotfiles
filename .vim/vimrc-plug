"
" Plugins will be downloaded under the specified directory.
" call plug#begin('~/.vim/plugged')
"
" " Declare the list of plugins.
" Plug 'tpope/vim-sensible'
" Plug 'junegunn/seoul256.vim'
"
" " List ends here. Plugins become visible to Vim after this call.
" call plug#end()
"
" After adding the above to the top of your Vim configuration file, reload it
" (:source ~/.vimrc) or restart Vim. Now run :PlugInstall to install the
" plugins."
"
" === Update plugins
"	Run :PlugUpdate to update the plugins.
"	After the update is finished, you can review the changes by pressing D in the window.
"	Or you can do it later by running :PlugDiff.
"
" === Removing plugins
"	1. Delete or comment out Plug commands for the plugins you want to remove.
"	2. Reload vimrc (:source ~/.vimrc) or restart Vim
"	3. Run :PlugClean. It will detect and remove undeclared plugins.
"

" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
	silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
		\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Run PlugInstall if there are missing plugins
"autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
"	\| PlugInstall --sync | source $MYVIMRC
"	\| endif

" " Looks better
" Plug 'benekastah/neomake', Cond(has('nvim'))
"
" " With other options
" Plug 'benekastah/neomake', Cond(has('nvim'), { 'on': 'Neomake' })
"
func! Cond(cond, ...)
	let opts = get(a:000, 0, {})
	return a:cond ? opts : extend(opts, { 'on': [], 'for': [] })
endfunc

" =============================================================================
" Load plugins
call plug#begin('~/.vim/plugged')
Plug 'junegunn/vim-plug'
call plug#end()

