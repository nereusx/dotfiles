#!/bin/sh
#
#	Package and service manager for whatever
#
#	Copyright (C) 2019, Nicholas Christopoulos <nereus@freemail.gr>
#
#	This program is free software; you can redistribute it and/or modify it
#	under the terms of the GNU General Public License as published by the Free
#	Software Foundation; either version 3 of the License, or (at your option)
#	any later version.
#

# find distribution
_get_distro() {
	if [ -r /etc/os-release ]; then
		echo $(awk '/^ID=/{gsub(/"/,"",$0);print tolower(substr($0,4))}' /etc/os-release)
	else
		echo $(uname -s)
	fi;
	}
: ${DISTRO:=$(_get_distro)}

# select packager
PKG=apt
case $DISTRO in
debian|ubuntu|mx)	PKG=apt	   ;;
slackware)			PKG=slack  ;;
void)				PKG=xbps   ;;
*BSD)				PKG=pkg    ;;
arch|manjaro)		PKG=pacman ;;
gentoo)				PKG=emerge ;;
redhat)				PKG=dnf    ;;
suse)				PKG=zypper ;;
esac

# select service manager
SVM=sysv
case $DISTRO in
debian|ubuntu)		SVM=systemd ;;
slackware)			SVM=sysv    ;;
*BSD)				SVM=sysv    ;;
void)				SVM=runit   ;;
arch|manjaro)		SVM=systemd ;;
gentoo)				SVM=openrc  ;;
redhat)				SVM=systemd ;;
suse)				SVM=systemd ;;
esac

echo $DISTRO, $PKG, $SVM

###
### Package actions
###

_upgrade() {
	case $PKG in
	apt)		apt update && apt upgrade ;;
	slack)		slackpkg update && slackpkg upgrade-all && slackpkg install-new ;;
	xbps)		xbps-install -Su && xlocate -S ;;
	pkg)		pkg update; pkg upgrade;;
	emerge)		emerge -u world ;;
	pacman)		pacman -Su ;;
	dnf)		dnf upgrade ;;
	zypper)		zypper dup ;;
	esac
	}

_install() {
	case $PKG in
	apt)		apt install $* ;;
	slack)		slackpkg install $* ;;
	xbps)		xbps-install $* ;;
	pkg)		pkg_add $* ;;
	emerge)		emerge $* ;;
	pacman)		pacman -S $* ;;
	dnf)		dnf install $* ;;
	zypper)		zypper install $* ;;
	esac
	}

_remove() {
	case $PKG in
	apt)		apt remove $* ;;
	slack)		slackpkg remove $* ;;
	xbps)		xbps-remove $* ;;
	pkg)		pkg_delete $* ;;
	emerge)		emerge -C $* ;;
	pacman)		pacman -R $* ;;
	dnf)		dnf remove $* ;;
	zypper)		zypper remove $* ;;
	esac
	}

_reinstall() {
	_remove $*
	# add purge
	_install $*
	}

_search() {
	case $PKG in
	apt)		apt search $* ;;
	slack)		slackpkg search $* ;;
	xbps)		xbps-query -Rs $* ;;
	pkg)		pkgfind &* ;;
	emerge)		emerge -S $* ;;
	pacman)		pacman -Ss $* ;;
	dnf)		dnf search $* ;;
	zypper)		zypper search $* ;;
	esac
	}

###
###	Services
###

_svctl() {
	action=$1
	shift
	for s in $*; do
		case $SVM in
		systemd)	systemctl $action $s ;;
		sysv)		/etc/rc.d/rc.$s $action ;;
		runit)
			if [ $action = "start" ]; then
				action="up"
			elif [ $action = "stop" ]; then
				action="down"
			fi
			sv $action $s ;;
		esac
	done
	}

_svenable() {
	for s in $*; do
		case $SVM in
		systemd)	systemctl enable $s ;;
		sysv)		chmod +x /etc/rc.d/rc.$s ;;
		runit)		ln -svf /etc/sv/$s /var/service/$s ;;
		esac
	done
	}
	
_svdisable() {
	for s in $*; do
		case $SVM in
		systemd)	systemctl disable $s ;;
		sysv)		chmod -x /etc/rc.d/rc.$s ;;
		runit)		rm /var/service/$s ;;
		esac
	done
	}

###
###	Main
###

todo="help"
if [ -n "$1" ]; then
	todo=$1
	shift
fi

case $todo in
-i|install)		_install   $* ;;
-r|remove)		_remove    $* ;;
-ri|reinstall)	_reinstall $* ;;
-u|upgrade)		_upgrade   $* ;;
-s|search)		_search    $* ;;
-e|enable)		_svenable  $* ;;
-d|isable)		_svdisable $* ;;
start|stop|restart)
				_svctl $todo $* ;;
-v|--version|version)
	echo "0.1"
	exit 1 ;;
-h|--help|help)
	echo "..."
	exit 1 ;;
*)
	echo "syntax error"
	exit 1 ;;
esac

