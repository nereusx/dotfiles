# -- mode: tcsh; tab-width: 4; indent-tabs-mode: t; indent-style: tab; encoding: utf-8; --
#
#	~/.tcshrc
#	Nicholas Christopoulos <mailto:nereus@freemail.gr>

# (non-)interactive absolute values
set parseoctal
set echo_style=both
set backslash_quote

# mode   umask
# 0777 - 0000 - extremly dangerous
# 0775 - 0002 - dangerous
# 0770 - 0007 - not so dangerous
# 0755 - 0022 - default
# 0750 - 0027 - logical
# 0700 - 0077 - nice
# 0000 - 0777 - paranoid
umask 022

##limit stacksize 256k
## slackpkg (bash script) needs > 256k !!!
## sbpkg (bash script) needs even more...
#limit stacksize 4096k
limit coredumpsize 0
alias termbin 'nc termbin.com 9999'

# if its a shell script, exit
if ( ! $?prompt ) exit

#
#	INTERACTIVE MODE
#

#
#	BASIC SYSTEM VARIABLES (for any environment)
#
set DS = \$
if ( ! $?USERID )   setenv USERID   `id -u`
if ( ! $?USER )     setenv USER     `id -un`
if ( ! $?HOME ) then
	if ( $USERID == 0 ) then
		setenv HOME "/root"
	else
		setenv HOME "/home/$USER"
	endif
endif
if ( ! $?HOSTNAME ) then
	setenv HOSTNAME `hostname`
endif

# find distro
if ( ! $?DISTRO ) then
	if ( -r /etc/os-release ) then
		setenv DISTRO `awk '/^ID=/{gsub(/"/,"",$0);print tolower(substr($0,4))}' /etc/os-release`
		if ( ! $?OSTYPE ) setenv OSTYPE `uname -s`
	else # ignore it
		setenv DISTRO `uname -s`
		if ( ! $?OSTYPE ) setenv OSTYPE unix
	endif
endif

#	Start TMUX automagically
#	echo 'AUTOLOAD_TMUX=1' >> /etc/environment
if ( $?AUTOLOAD_TMUX ) then
	if ( $AUTOLOAD_TMUX == 1 ) then
		if ( ( ! $?TMUX ) && ( ! $?SUDO_USER ) ) then
			exec tmux
		endif
	endif
endif

#
#	setup several local directories
#
setenv backup $home/.backup
# setup several local directories
set list = ( $backup $backup/text $backup/saves $home/.bin $home/.help $home/.misc )
foreach e ( $list )
	if ( ! -e $e ) then
		mkdir -p $e
		chmod 0700 $e
	endif
end

#
#	setup and cleanup path
#
set path = ( $home/.bin $home/.help /bin /usr/bin /usr/local/bin /usr/pkg/bin $path )
if ( $USERID == 0 ) then
	set list =( /sbin /usr/sbin /usr/local/sbin /usr/pkg/sbin $path )
	foreach e ( $list )
		if ( -d $e && ! -l $e ) then
			set path = ( $e $path )
		endif
	end
endif
# you path++ at https://github.com/nereusx/unix-utils
if ( -X 'path++' ) setenv PATH `path++`

#
#	SETUP TCSH's ENVIRONMENT
#
set autorehash
set autolist
set highlight
unset autologout
set mail = ( /var/mail/$user )
unset noglob
unalias beepcmd
if ( -e ~/.sounds/shell-beep.mp3 ) alias beepcmd 'play -q ~/.sounds/shell-beep.mp3'
set padhour
alias helpcommand 'man \!:1'
# Runs every tperiod minutes.
# This provides a convenient means for checking on common but infrequent changes such as new mail.
# For example, if one does
#set tperiod = 30
#alias periodic checknews
unalias periodic

# select program to use for ncurses menus
set list = ( fzy pick iselect )
set pick_method = none
foreach e ( $list )
	if ( -X $e ) then
		set pick_method = $e
		break
	endif
end

#
#	tcsh's prompt
#	man console_codes
#
unset ampm
set ellipsis
set usercolor="%{\033[1;32m%}"
set hostcolor="%{\033[1;32m%}"
set timecolor="%{\033[1;35m%}"
set dirxcolor="%{\033[1;34m%}"
set resetmode="%{\033[0m%}"
if ( $USERID == 0 ) then
	set usercolor="%{\033[1;31m%}"
	set dirxcolor="%{\033[1;31m%}"
endif
if ( $?REMOTEHOST ) then
	set hostcolor="%{\033[33m%}"
endif
set prompt = "${timecolor}%T ${usercolor}%n${hostcolor}@%m ${dirxcolor}%C4${resetmode} %# "
unset usercolor hostcolor dirxcolor timecolor rsetcolor

#
#	tcsh' history
#
set histlit
set history=1024
set histdup=prev
set nohistclop
alias hist 'history `tput lines`'
switch ( $pick_method )
case fzy:
	alias hc 'set x=`history -hr | fzy` && eval $x'
	breaksw
case pick:
	alias hc 'set x=`history -h | pick -S` && eval $x'
	breaksw
case iselect:
	alias hc '\
	set y=`history | wc -l`;\
	set x=`history -T | iselect -a -p $y -n "history" -t "Run again..." | awk \'{$1="";$2="";print $0;}\'`;\
	if ( "$x" != "" && "$x" != "hc" ) eval $x'
endsw

#
#	tcsh's directory stuff
#
#	Note: use 'dirs' to show the history of directories;
#	use 'cd =N' where N the number of the directory as shown by 'dirs'.
#
set dunique
#set cdpath = ( ${HOME} /usr/src )
set pushdsilent
set pushdtohome
alias cd 'pushd'
alias dirs 'dirs -v'
if ( -X devtodo ) then
	alias cwdcmd 'devtodo --timeout --summary'
endif
switch ( $pick_method )
case fzy:
	alias go 'set x=`dirs | fzy | awk \'{print $1}\'`;if ( $x != "" ) cd =$x'
	breaksw
case pick:
	alias go 'set x=`dirs | pick -S | awk \'{print $1}\'`;if ( $x != "" ) cd =$x'
	breaksw
case iselect:
	alias go 'set x=`dirs | iselect -a -n "dirs -v" -t "Change directory to..." | awk \'{print $1}\'`;if ( $x != "" ) cd =$x'
endsw

#
#	tcsh's completion
#
#	complete [command [word/pattern/list[:select]/[[suffix]/] ...]] (+)
set hosts=`cat /etc/hosts | awk '/^[1-9]+/ {if (substr($2,1,5) != "local") print $2}'`
if ( -e /etc/complete.tcsh ) then
	source /etc/complete.tcsh
else
	echo "warning: /etc/complete.tcsh does not exists"
endif
uncomplete ln
uncomplete rm
uncomplete cp
uncomplete mv
uncomplete mount
complete set		'p/1/s/'
complete unset		'p/1/s/'
complete setenv		'p/1/e/'
complete unsetenv	'p/1/e/'
complete env		'c/*=/f/' 'p/1/e/=/' 'p/2/c/'
complete xdvi		'n/*/f:*.dvi/'
complete latex		'n/*/f:*.{tex,ltx}/'
complete pdflatex	'n/*/f:*.{tex,ltx}/'
complete xelatex	'n/*/f:*.{tex,ltx}/'
complete adb		'n/push/f:*.{apk}/'
complete kill		'c/-/S/' 'c/%/j/' 'n/*/`ps -u $user | awk '"'"'{print $1}'"'"'`/'
if ( -X tmux ) then
	# create completion for tmux
	set tmux_cmds = `tmux list-commands | awk '{print$1}'`
	uncomplete tmux
	complete   tmux     "p/1/(${tmux_cmds})/"
endif

#
#	tcsh's terminal fixes and keys
#
if ( $TERM == "xterm" ) then
	bindkey "\033[1;3D" backward-word
	bindkey "\033[1;3C" forward-word
else
	bindkey "\033\033[D" backward-word
	bindkey "\033\033[C" forward-word
endif
bindkey '' list-choices-raw
bindkey "\033[Z" complete-word-back
bindkey "\033s" i-search-fwd
bindkey '' i-search-back
bindkey "\033q" quoted-insert
bindkey '' redisplay
bindkey "\033m" set-mark-command
bindkey "\033j" exchange-point-and-mark
bindkey "\033k" kill-line
bindkey '' backward-kill-line
bindkey "\033d" kill-whole-line
bindkey '' kill-region
bindkey '' yank
bindkey '' copy-prev-word
bindkey "\033-" insert-last-word

# shift+f5; alt+p (tcsh's default)
bindkey "\033[15;2~" history-search-backward
bindkey "\033p" history-search-backward
# f5; alt+n (tcsh's default)
bindkey "\033[15~" history-search-forward
bindkey "\033n" history-search-forward

# keypad
bindkey "\033Om" kill-region
bindkey "\033Ok" copy-region-as-kill
bindkey "\033Op" yank

if ( $TERM == "rxvt" ) then
	setenv TERM rxvt-unicode
	bindkey "\033[8~" end-of-line
else if ( $TERM == "rxvt-unicode" || $TERM == "rxvt-unicode-256color" ) then
	bindkey "\033[8~" end-of-line
else if ( $TERM == "st-256color" ) then
	bindkey "\033[P" delete-char
else
	bindkey "\033[3~" delete-char
endif

# SSH
if ( $?REMOTEHOST ) then
	bindkey "\033OH" beginning-of-line
	bindkey "\033OF" end-of-line
	bindkey "\033[3~" delete-char
endif

#
#	Default Applications
#

### EDITORS ###

# settings for JED
setenv JED_HOME		${HOME}/.jed
alias jed-prep     'xjed -batch -n -l preparse'

# settings for GRIEF
setenv GRLIB			/usr/local/share/grief
setenv GRPATH			${HOME}/.grief-local:${GRLIB}/macros
setenv GRFLAGS			"--utf8=yes -m grief-rc"
setenv GRTERM			"linux"
setenv GRHELP			${GRLIB}/help
setenv GRDICTIONARIES	en,el
setenv GRDICTIONARY		/usr/share/aspell

# select default editor
set list = ( jed nano joe vim vi emacs ed )
foreach e ( $list )
	if ( -X $e ) then
		setenv EDITOR $e
		break
	endif
end
setenv VISUAL "$EDITOR"
alias edit "$EDITOR"

# select default hex editor
set list = ( hte ht dhex mcedit )
setenv HEXEDITOR "/usr/bin/od -t x1 "
foreach e ( $list )
	if ( -X $e ) then
		setenv HEXEDITOR $e
		break
	endif
end
alias hexedit "$HEXEDITOR"

# default hex dumper
if ( ! -X hex ) then
	if ( -X hexdump ) then
		alias hex 'hexdump -C'
	else
		alias hex 'od -t x1'
	endif
endif

# select BRIEF editor
alias b "$EDITOR"
set list = ( jed gr nano )
foreach e ( $list )
	if ( -X $e ) then
		alias b "$e"
		break
	endif
end

### PAGER ###

setenv LS_OPTIONS		'--color=auto'
setenv LESS 			'-R'
setenv GROFF_ENCODING	'utf8'
setenv LESS_TERMCAP_mb 	'[1;31m'		# begin bold,			ANSI: [1m
setenv LESS_TERMCAP_md  '[1;36m'		# begin blink,			ANSI: [5m
setenv LESS_TERMCAP_me  '[0m'     	# reset bold/blink,		ANSI: [22m[25m
setenv LESS_TERMCAP_so  '[7m'			# begin reverse video,	ANSI: [7m
setenv LESS_TERMCAP_se  '[27m'		# reset reverse video,	ANSI: [27m
setenv LESS_TERMCAP_us  '[4m[1;32m'	# begin underline,		ANSI: [4m
setenv LESS_TERMCAP_ue  '[0m'			# reset underline,		ANSI: [24m
setenv LESS_TERMCAP_mr	'[7m'
setenv LESS_TERMCAP_mh	'[2m'
#setenv LESSOPEN "|/usr/bin/source-highlight-esc.sh %s"
setenv MOST_SWITCHES	'-w'
setenv MOST_EDITOR		'jed %s -g %d'
setenv PAGER less
#setenv PAGER most

# select graphics browser
set list = ( firefox falkon yandex-browser surf midori dillo chromium chrome )
foreach e ( $list )
	if ( -X $e ) then
		setenv BROWSER "$e"
		break
	endif
end

# select textmode browser
set list = ( links links2 w3m elinks lynx )
foreach e ( $list )
	if ( -X $e ) then
		setenv TEXTBROWSER "$e"
		break
	endif
end

# use make in so many threads as your processors
if ( -e /proc/cpuinfo ) then
	set cpus=`cat /proc/cpuinfo | grep processor | tail -1 | sed 's/processor.*://g'`
	@ cpus ++
	setenv MAKEFLAGS "-j$cpus"
endif

# HOW-TO: shut up KDE's debug messages; 
#	I didn't found it yet, but, you can disable it at `kdebugdialog' app.

#
#	Aliases
#
alias reload		'source ~/.tcshrc'
alias remake		'make clean; make' # warning: 'remake' began gnu project to debug makefiles
alias cls			'clear'
alias psa			'ps aux | grep -v "\["'
alias diogenis		'fortune diogenis'
alias free-h		'free -h'
alias df-h			'df -h'
alias dff			'echo "Filesystem      Size  Used Avail Use% Mounted on";df -h | grep \'^/dev/\''
alias xcopy			'rsync -ah --progress'
alias xmerge		'xrdb -merge ~/.Xresources'
alias xmonitor-off	'xset dpms force off'
alias warn			'echo "\e[7m\e[5m "\!*" \e[0m"'
alias ltrim			"sed 's/^[ \t\n\r]*//'"
alias rtrim			"sed 's/[ \t\n\r]*$DS//'"
alias trim			"sed 's/^[ \t\n\r]*//;s/[ \t\r\n]*$DS//'"
alias mounted       'mount | grep -E \'^(tmpfs|/dev)\' | grep -Ev \'AppImage|/dev/shm|/dev/fuse\''
alias myip			'wget -qO- http://ipecho.net/plain ; echo'
alias mc			'mc --nomouse'

# colorize
set color
set colorcat
#
alias ll	       'ls    --color -lha'
alias ls	       'ls    --color'
if ( $DISTRO != "FreeBSD" ) then
	alias grep	       'grep  --color=auto'
	alias egrep	       'egrep --color=auto'
	alias dmesg	       'dmesg --color=always'
endif
alias diff	       'diff  --color=auto'

# sudo
if ( $USER != 'root' ) then
	# sudo
	alias htop     'sudo htop'
	alias fdisk    'sudo fdisk'
	alias gdisk    'sudo gdisk'
	alias cfdisk   'sudo cfdisk'
	alias cgdisk   'sudo cgdisk'
	alias parted   'sudo parted'
	if ( -X dpkg )    alias dpkg    'sudo dpkg'
	if ( -X apt )     alias apt     'sudo apt'
	if ( -X apt-get ) alias apt-get 'sudo apt-get'
endif
alias tmux-reload 'tmux source-file ~/.tmux.conf'
alias amionline   'ping 1.1.1.1 -c 1 -w 1 > /dev/null && echo yes || echo no'

# some nice beeps
# simple beep
if ( -f /usr/share/sounds/generic/tone-440Hz-250ms.ogg ) then
	alias beep 'paplay /usr/share/sounds/generic/tone-440Hz-250ms.ogg'
else
	alias beep 'echo -n '
endif
# alarm
if ( -f /usr/share/sounds/generic/alarm-fire.ogg ) then
	alias abeep 'paplay /usr/share/sounds/generic/alarm-fire.ogg'
else
	alias abeep 'echo -n '
endif

# xwindows title
alias setxtitle		"echo -n '''\033]0;\!*\007'''"

#
if ( $DISTRO == "void" ) then
	alias man 'set x=`tput cols`; @ x = $x - 2; /usr/bin/man -O width=$x '
endif

### information utilities
set list = ( /var/log/everything/current /var/log/socklog/messages/current /var/log/messages /var/log/syslog /var/log/dmesg.log )
foreach e ( $list )
	if ( -r $e ) then
		if ( -X clog ) then
			alias log30 "tail -n 30 $e | clog"
		else
			alias log30 "tail -n 30 $e"
		endif
		break
	endif
end
set list = ( /var/log/apache2/error.log /var/log/httpd/error.log /var/log/apache/error.log )
foreach e ( $list )
	if ( -r $e ) then
		alias phplog "tail -n 30 $e"
		break
	endif
end

alias check-journal 'sudo iotop -obtqqq | grep jbd2'
alias netlog        'sudo netstat -lptu4'
alias topmemproc   '( @ lines = `echotc lines` - 2; ps aux | head -1; ps aux | tail -n+2 | sort -nrk4 | head -$lines | cut -c-`echotc cols` )'
alias whereami	   'echo "`hostname -f` (`hostname -i`):`pwd`"'
# use system time command (time of process execution statistics) instead of tcsh time
alias time '/usr/bin/time'

### generic programs
alias cdwrite	   'xorrecord -v speed=16 dev=/dev/sr0 -eject blank=as_needed'
if ( ! -X calc ) then
	if ( -X wcalc ) then
		alias calc 'wcalc'
	else
		alias calc 'echo "\!*" | bc -l'
	endif
endif
if ( -r /var/lib/dpkg/status ) then
	alias dpkg-dc 'grep -E \'(Package:|Depends:).*debconf\' /var/lib/dpkg/status'
endif
alias git-q 	'set msg=''\!*''; if ( "$msg" == "" ) set msg="quick and dirty fix"; git add .; git commit -m "$msg"; git push'
alias git-co 	'git checkout'
alias git-pull	'git pull'

## paps support UTF8, a2ps don't
#if ( -X paps ) alias a2ps 'paps'

## zssh is ssh with ZModem support
#if ( -X zssh ) alias ssh  'zssh'

# command line web search
if ( -X surfraw ) then
	setenv SURFRAW_graphical_browser	"$BROWSER"
	setenv SURFRAW_text_browser			"$TEXTBROWSER"
	setenv SURFRAW_graphical			no
	alias ddg 'surfraw duckduckgo'
else if ( ! -X ddg ) then
	alias ddg 'w3m https://duckduckgo.com/lite'
endif
if ( -X youtube-dl ) then
	alias yt-get-audio	'youtube-dl -i -c --extract-audio --audio-format vorbis ''\!*'''
	alias yt-get-plist	'youtube-dl -i -c --extract-audio --audio-format vorbis -o "%(title)s.%(ext)s" ''\!*'''
endif

#
#	login shell, display welcome screen
#
if ( $?loginsh ) then # we are login shell..
	if ( $tty =~ "tty[123456]" ) then
		# set terminal blank mode in minutes
		setterm --blank=5
		# set terminal poweroff in minutes
		setterm --powerdown=5
		setterm --powersave powerdown
		# enable keypad
		echo -n '\033='
	endif

	echo 'Welcome to tenex c-shell'
	echo
	set list = ( neofetch screenfetch diogenis fortunes )
	foreach f ( $list )
		if ( -X $f ) then
			$f
			break
		endif
	end
endif

# common packager for root
if ( $USERID == 0 ) then
	if ( -x /usr/src/dotfiles/dist/$DISTRO/$DISTRO ) then
		alias app "/usr/src/dotfiles/dist/$DISTRO/$DISTRO"
	else if ( -x /usr/src/dotfiles/dist/$DISTRO/app ) then
		alias app "/usr/src/dotfiles/dist/$DISTRO/app"
	endif
endif

#
#	load additional settings if you use my script
#
set nonomatch
set list = ( ~/.tcshrc-* )
foreach conf ( $list )
	if ( -r $conf ) source $conf
end
unset nonomatch

# EOF
