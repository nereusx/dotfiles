# -*- mode: tcsh; encoding: utf-8; tab-size: 4; indent: 4; -*-
#
#	~/.tcshrc
#	nicholas christopoulos (nereus@freemail.gr)

# run tmux ?
set use_tmux = 0

# (non-)interactive absolute values
set parseoctal
set echo_style=both
set backslash_quote

# mode   umask
# 0777 - 0000 -
# 0775 - 0002 -
# 0770 - 0007
# 0755 - 0022 - default
# 0750 - 0027 - logical
# 0700 - 0077 - nice
# 0000 - 0777 - paranoid
#unset ignoreeof
#umask 027
umask 022

#limit stacksize 256k
# slackpkg (bash script) needs > 256k !!!
# sbpkg (bash script) needs even more...
limit stacksize 4096k
limit coredumpsize 0
alias termbin 'nc termbin.com 9999'

if ( $?prompt == 0 ) then # we are shell script
	exit
endif

### this is an interactive shell ###
if ( "`uname -a | grep -i ubuntu`" != "" ) then
	set distro=ubuntu
else
	set distro=unix
endif

setenv backup $home/.backup
set list = ( $backup $backup/text $backup/saves $home/.bin $home/.help $home/.misc )
foreach e ( $list )
	if ( ! -e $e ) mkdir -m=0700 -p $e
end

set path = ( $home/.bin $home/.help $path )
if ( -e '/bin/path++' ) setenv PATH `/bin/path++`

#
if ( $?loginsh ) then # we are login shell..
	if ( $tty =~ "tty[123456]" ) then
		# enable keypad
		echo -n '\033='
	endif
endif

# redirect to tmux
if ( $use_tmux == 1 ) then
	if ( $?TMUX == 0 ) then
		exec tmux
	endif
endif
# --- end ---

set autolist
set highlight
set mail = ( /var/mail/$user )
unset noglob

# --- terminal attributes ---
set t_reset      = "%{\033[0m%}"
set bold_on      = "%{\033[1m%}"
set bold_off     = "%{\033[21m%}"
set halftone_on  = "%{\033[2m%}"
set halftone_off = "%{\033[22m%}"
set uline_on     = "%{\033[4m%}"
set uline_off    = "%{\033[24m%}"
set blink_on     = "%{\033[5m%}"
set blink_off    = "%{\033[25m%}"
set reversed_on  = "%{\033[7m%}"
set reversed_off = "%{\033[27m%}"
set red          = "%{\033[1;31m%}"
set green        = "%{\033[0;32m%}"
set yellow       = "%{\033[1;33m%}"
set blue         = "%{\033[1;34m%}"
set magenta      = "%{\033[1;35m%}"
set cyan         = "%{\033[1;36m%}"
set white        = "%{\033[0;37m%}"
# -- end ---

# --- EDITORS ---
setenv JED_HOME		${HOME}/.jed
setenv GRPATH		${HOME}/.grief-local/:/usr/share/grief/macros
setenv GRFLAGS		"-m grief-rc"
setenv GRUTF8_FORCE
setenv GRDICTIONARIES en,el
setenv GRDICTIONARY /usr/share/aspell

set list = ( jed gr emacs nano joe vi )
foreach e ( $list )
	if ( -X $e ) then
		setenv EDITOR $e
		setenv VISUAL $e
		break
	endif
end
alias edit "$EDITOR"

set list = ( hte dhex )
setenv HEXEDITOR "/usr/bin/od -t x1 "
foreach e ( $list )
	if ( -X $e ) then
		setenv HEXEDITOR $e
		break
	endif
end
alias hexedit "$HEXEDITOR"
if ( -X hexdump ) then
	alias hexdump 'hexdump -C'
else
	alias hexdump 'od -t x1'
endif

# Select BRIEF editor
alias b 'vi'
set list = ( jed gr emacs nano joe vi )
foreach e ( $list )
	if ( -X $e ) then
		alias b "$e"
		break
	endif
end
# --- end ---

# --- PAGER ---
setenv LS_OPTIONS		'--color=auto'
setenv LESS 			'-R'
setenv GROFF_ENCODING	'utf8'
setenv LESS_TERMCAP_mb 	'[1;31m'		# begin bold,			ANSI: [1m
setenv LESS_TERMCAP_md  '[1;36m'		# begin blink,			ANSI: [5m
setenv LESS_TERMCAP_me  '[0m'     	# reset bold/blink,		ANSI: [21m[25m
setenv LESS_TERMCAP_so  '[7m'			# begin reverse video,	ANSI: [7m
setenv LESS_TERMCAP_se  '[27m'		# reset reverse video,	ANSI: [27m
setenv LESS_TERMCAP_us  '[1;32m'		# begin underline,		ANSI: [4m
setenv LESS_TERMCAP_ue  '[0m'			# reset underline,		ANSI: [24m
setenv LESS_TERMCAP_mr	`tput rev`
setenv LESS_TERMCAP_mh	`tput dim`
setenv LESS_TERMCAP_ZN	`tput ssubm`
setenv LESS_TERMCAP_ZV	`tput rsubm`
setenv LESS_TERMCAP_ZO	`tput ssupm`
setenv LESS_TERMCAP_ZW	`tput rsupm`
#setenv LESSOPEN "|/usr/bin/source-highlight-esc.sh %s"
setenv MOST_SWITCHES	'-w'
setenv MOST_EDITOR		'jed %s -g %d'
setenv PAGER less
#setenv PAGER most
# --- end ---

# other settings
setenv MAKEFLAGS '-j16'
setenv __GL_YIELD 'USLEEP'

#
#	How-To shut up KDE's debug messages
#	I didn't found it yet, but, you can disable it at `kdebugdialog' app.
#

### TERMINAL FIXES ###
if ( $?COLORTERM ) then
	if ( $COLORTERM == "truecolor" ) then
		setenv COLORTERM color
	endif
endif
if ( $TERM == "xterm" ) then
	bindkey "\033[1;3D" backward-word
	bindkey "\033[1;3C" forward-word
else
	bindkey "\033\033[D" backward-word
	bindkey "\033\033[C" forward-word
endif
#bindkey "" list-glob
bindkey '' list-choices-raw
#bindkey "" complete-word-fwd
bindkey '[Z' complete-word-back
bindkey 's' i-search-fwd
bindkey '' i-search-back
bindkey 'q' quoted-insert
bindkey '' redisplay
bindkey 'm' set-mark-command
bindkey 'j' exchange-point-and-mark
bindkey 'k' kill-line
bindkey '' backward-kill-line
bindkey 'd' kill-whole-line
#bindkey '' copy-region-as-kill
bindkey '' kill-region
bindkey '' yank
bindkey '' copy-prev-word
bindkey '-' insert-last-word

# shift+f5; alt+p (tcsh's default)
bindkey '[15;2~' history-search-backward
bindkey 'p' history-search-backward
# f5; alt+n (tcsh's default)
bindkey '[15~' history-search-forward
bindkey 'n' history-search-forward

# pad--
bindkey 'Om' kill-region
# pad-+
bindkey 'Ok' copy-region-as-kill
# pad ins
bindkey 'Op' yank

if ( $TERM == "rxvt" ) then
	setenv TERM rxvt-unicode
	bindkey "^[[8~" end-of-line
else if ( $TERM == "rxvt-unicode" || $TERM == "rxvt-unicode-256color" ) then
	bindkey "^[[8~" end-of-line
else if ( $TERM == "st-256color" ) then
	bindkey "\033[P" delete-char
endif
# --- end ---

# prompt
set ellipsis
set prompt = "%B%{\033[35m%}%t %{\033[32m%}%n@%m%b %C4 %# "

#	history
set histlit
set history=128
#set histdup=all
set histdup
set nohistclop
alias hist 'history 20'
# --- end ---

#	completion
#	complete [command [word/pattern/list[:select]/[[suffix]/] ...]] (+)
if ( -e /etc/complete.tcsh ) then
	source /etc/complete.tcsh
endif
uncomplete ln
uncomplete rm
uncomplete cp
uncomplete mv
uncomplete mount
complete set		'p/1/s/'
complete unset		'p/1/s/'
complete setenv		'p/1/e/'
complete unsetenv	'p/1/e/'
complete env		'c/*=/f/' 'p/1/e/=/' 'p/2/c/'
complete xdvi		'n/*/f:*.dvi/'
complete latex		'n/*/f:*.{tex,ltx}/'
complete pdflatex	'n/*/f:*.{tex,ltx}/'
complete xelatex	'n/*/f:*.{tex,ltx}/'
complete adb		'n/push/f:*.{apk}/'
complete kill		'c/-/S/' 'c/%/j/' 'n/*/`ps -u $user | awk '"'"'{print $1}'"'"'`/'
# --- end ---

#	aliases
#alias rcopy 'rsync -ah --progress'
#alias remake 'make clean; make' # 'remake' began gnu project to debug makefiles
alias cls 'clear'
alias diogenis 'fortune diogenis'
alias free-h 'free -h'
alias df-h 'df -h'
alias jed-prep 'xjed -batch -n -l preparse'
# colorize
set color
set colorcat
alias ls	'ls    --color'
alias ll	'ls    --color -lha'
alias grep	'grep  --color=auto'
alias egrep	'egrep --color=auto'
alias dmesg	'dmesg --color=always'
alias diff	'diff  --color=auto'

# sudo
if ( $USER != 'root' ) then
	alias htop 'sudo htop'
	alias fdisk 'sudo fdisk'
	alias cfdisk 'sudo cfdisk'
	if ( -X apt ) alias apt 'sudo apt'
	if ( -X apt-get ) alias apt-get 'sudo apt-get'
endif

# info
if ( $distro == "unix" ) then
	alias log30 'sudo tail -n 30 /var/log/messages'
else
	alias log30 'sudo tail -n 30 /var/log/syslog'
endif
alias check-journal 'sudo iotop -obtqqq | grep jbd2'
alias netlog 'sudo netstat -lptu4'
alias topmemproc '( @ lines = `echotc lines` - 2; ps aux | head -1; ps aux | tail -n+2 | sort -nrk4 | head -$lines | cut -c-`echotc cols` )'
alias whereami	'echo "`hostname -f` (`hostname -i`):`pwd`"'
alias xmerge 'xrdb -merge ~/.Xdefaults'
alias xmonitor-off 'xset dpms force off'
# use system time command (time of process execution statistics) instead of tcsh time
alias time '/usr/bin/time'

# environment
#alias beepcmd '/usr/bin/play -q /usr/share/sounds/shell-beep.mp3'
unalias beepcmd
set padhour
#alias helpcommand '\!:1 --help'
alias helpcommand 'man \!:1'

# programs
alias cdwrite	'xorrecord -v speed=16 dev=/dev/sr0 -eject blank=as_needed'
#alias chrome	'google-chrome-stable --no-sandbox'
alias chrome	'chromium --no-sandbox'
if ( ! -X calc ) then
	if ( -X wcalc ) then
		alias calc 'wcalc'
	else if ( -X bc ) then
		alias calc 'echo \!* | bc -l'
	endif
endif
alias qgit 'git add .; git commit -m "quick and dirty fix"; git push'
alias git-q 'git add .; git commit -m "quick and dirty fix"; git push'
# --- end ---

# directory stuff
set dunique
set cdpath = ( ${HOME} /usr/src /collections )
set pushdsilent
alias pd 'pushd'
alias pd. 'pushd $PWD'
if ( -e /usr/bin/devtodo ) then
	alias cwdcmd devtodo --timeout --summary
endif
# use always pushd instead of cd
set pushdtohome
alias cd 'pushd'
alias dirs 'dirs -v'
# --- end ---

# Runs every tperiod minutes. This provides a convenient means for checking on common but infrequent changes such as new mail. For example, if one does
# set tperiod = 30
# alias periodic checknews

### tmux specific ###
if ( $use_tmux == 1 ) then
	if ( $?TMUX != 0 ) then
		alias tmux-lf		'tmux select-pane -L'
		alias tmux-rt		'tmux select-pane -R'
		alias tmux-up		'tmux select-pane -U'
		alias tmux-dn		'tmux select-pane -D'
		alias tmux-reload	'tmux source-file ~/.tmux.conf'
		
		set tmux_cmds = `tmux list-commands | awk '{print$1}'`
		uncomplete tmux
		complete   tmux     "p/1/(${tmux_cmds})/"
	endif
endif
# --- end ---

unset list

#EOF
