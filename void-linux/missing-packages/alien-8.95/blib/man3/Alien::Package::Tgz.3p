.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Alien::Package::Tgz 3"
.TH Alien::Package::Tgz 3 "2019-10-02" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Alien::Package::Tgz \- an object that represents a tgz package
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is an object class that represents a tgz package, as used in Slackware. 
It also allows conversion of raw tar files.
It is derived from Alien::Package.
.SH "CLASS DATA"
.IX Header "CLASS DATA"
.IP "scripttrans" 4
.IX Item "scripttrans"
Translation table between canoical script names and the names used in
tgz's.
.SH "METHODS"
.IX Header "METHODS"
.IP "checkfile" 4
.IX Item "checkfile"
Detect tgz files by their extension.
.IP "install" 4
.IX Item "install"
Install a tgz with installpkg. Pass in the filename of the tgz to install.
.Sp
installpkg (a slackware program) is used because I'm not sanguine about
just untarring a tgz file. It might trash a system.
.IP "scan" 4
.IX Item "scan"
Scan a tgz file for fields. Has to scan the filename for most of the
information, since there is little useful metadata in the file itself.
.IP "unpack" 4
.IX Item "unpack"
Unpack tgz.
.IP "prep" 4
.IX Item "prep"
Adds a populated install directory to the build tree.
.IP "build" 4
.IX Item "build"
Build a tgz.
.SH "AUTHOR"
.IX Header "AUTHOR"
Joey Hess <joey@kitenet.net>
